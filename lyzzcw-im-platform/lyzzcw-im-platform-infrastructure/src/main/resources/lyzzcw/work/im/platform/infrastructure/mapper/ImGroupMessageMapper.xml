<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lyzzcw.work.im.platform.infrastructure.mapper.ImGroupMessageMapper">
  <resultMap id="BaseResultMap" type="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="send_id" jdbcType="BIGINT" property="sendId" />
    <result column="send_nick_name" jdbcType="VARCHAR" property="sendNickName" />
    <result column="at_user_ids" jdbcType="VARCHAR" property="atUserIds" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_id, send_id, send_nick_name, at_user_ids, type, status, send_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from im_group_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from im_group_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    insert into im_group_message (id, group_id, send_id, 
      send_nick_name, at_user_ids, type, 
      status, send_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{sendId,jdbcType=BIGINT}, 
      #{sendNickName,jdbcType=VARCHAR}, #{atUserIds,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, 
      #{status,jdbcType=BIT}, #{sendTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    insert into im_group_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="sendNickName != null">
        send_nick_name,
      </if>
      <if test="atUserIds != null">
        at_user_ids,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=BIGINT},
      </if>
      <if test="sendNickName != null">
        #{sendNickName,jdbcType=VARCHAR},
      </if>
      <if test="atUserIds != null">
        #{atUserIds,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    update im_group_message
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="sendId != null">
        send_id = #{sendId,jdbcType=BIGINT},
      </if>
      <if test="sendNickName != null">
        send_nick_name = #{sendNickName,jdbcType=VARCHAR},
      </if>
      <if test="atUserIds != null">
        at_user_ids = #{atUserIds,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    update im_group_message
    set group_id = #{groupId,jdbcType=BIGINT},
      send_id = #{sendId,jdbcType=BIGINT},
      send_nick_name = #{sendNickName,jdbcType=VARCHAR},
      at_user_ids = #{atUserIds,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="lyzzcw.work.im.platform.domain.entity.ImGroupMessage">
    update im_group_message
    set group_id = #{groupId,jdbcType=BIGINT},
      send_id = #{sendId,jdbcType=BIGINT},
      send_nick_name = #{sendNickName,jdbcType=VARCHAR},
      at_user_ids = #{atUserIds,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>